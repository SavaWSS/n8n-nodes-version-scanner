{
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -80,
        0
      ],
      "id": "0a513fe1-c735-4aea-a75c-682dd6c725df",
      "name": "When clicking 'Test workflow'"
    },
    {
      "parameters": {
        "returnAll": false,
        "limit": 10,
        "filters": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        220,
        0
      ],
      "id": "27315590-60a8-4ec9-ba54-a6a88e92d37a",
      "name": "n8n",
      "credentials": {
        "n8nApi": {
          "id": "a15hxev5jQWgcOgl",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://raw.githubusercontent.com/SavaWSS/n8n-nodes-version-scanner/refs/heads/main/node_versions.json",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        220,
        -220
      ],
      "id": "dca853c6-0b42-4883-b0e2-60111673b614",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "code": "// Получаем данные от ноды n8n и HTTP Request\nconst nodesInUse = $input.item.json.nodes;\nconst nodeVersions = $input.item.json.nodeVersions;\n\n// Функция для сравнения версий\nfunction compareVersions(currentVersion, latestVersion) {\n  return currentVersion < latestVersion;\n}\n\n// Анализ воркфлоу\nconst results = [];\n\nfor (const workflow of nodesInUse) {\n  const workflowName = workflow.name;\n  const nodes = workflow.nodes;\n\n  for (const node of nodes) {\n    const nodeType = node.type;\n    const currentVersion = parseFloat(node.typeVersion);\n    const nodeName = node.name;\n\n    if (nodeType in nodeVersions) {\n      const latestVersion = parseFloat(nodeVersions[nodeType].version_info.latest_version);\n\n      if (compareVersions(currentVersion, latestVersion)) {\n        results.push({\n          workflow: workflowName,\n          node_type: nodeType,\n          current_version: currentVersion,\n          latest_version: latestVersion,\n          node_name: nodeName,\n          match: true\n        });\n      }\n    } else {\n      results.push({\n        workflow: workflowName,\n        node_type: nodeType,\n        current_version: 0.0,\n        latest_version: 0.0,\n        node_name: nodeName,\n        match: false\n      });\n    }\n  }\n}\n\n// Возвращаем результаты\nreturn { results };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        440,
        0
      ],
      "id": "code_node",
      "name": "Code"
    }
  ],
  "connections": {
    "When clicking 'Test workflow'": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9230f0b0e9c27677fa7e8fd7f833e5122f81810548e220706ae06f9cbbf9d39a"
  }
} 